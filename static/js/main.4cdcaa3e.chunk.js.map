{"version":3,"sources":["App.js","components/ResultComponent.js","components/KeyPadComponent.js","serviceWorker.js","index.js"],"names":["App","_this","Object","_Users_gstvinf_Desktop_calculadora_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_Users_gstvinf_Desktop_calculadora_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_gstvinf_Desktop_calculadora_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","onClick","button","calculate","reset","backspace","setState","result","state","checkResult","includes","replace","eval","e","slice","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","_components_ResultComponent__WEBPACK_IMPORTED_MODULE_7__","_components_KeyPadComponent__WEBPACK_IMPORTED_MODULE_8__","Component","ResultComponent","props","KeyPadComponent","name","target","Boolean","window","location","hostname","match","ReactDOM","render","react_default","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4cdcaa3e.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport ResultComponent from './components/ResultComponent';\nimport KeyPadComponent from \"./components/KeyPadComponent\";\n\nclass App extends Component {\n    constructor(){\n        super();\n\n        this.state = {\n            result: \"\"\n        }\n    }\n\n    onClick = button => {\n\n        if(button === \"=\"){\n            this.calculate()\n        }\n\n        else if(button === \"C\"){\n            this.reset()\n        }\n        else if(button === \"CE\"){\n            this.backspace()\n        }\n\n        else {\n            this.setState({\n                result: this.state.result + button\n            })\n        }\n    };\n\n\n    calculate = () => {\n        var checkResult = ''\n        if(this.state.result.includes('--')){\n            checkResult = this.state.result.replace('--','+')\n        }\n\n        else {\n            checkResult = this.state.result\n        }\n\n        try {\n            this.setState({\n                // eslint-disable-next-line\n                result: (eval(checkResult) || \"\" ) + \"\"\n            })\n        } catch (e) {\n            this.setState({\n                result: \"error\"\n            })\n\n        }\n    };\n\n    reset = () => {\n        this.setState({\n            result: \"\"\n        })\n    };\n\n    backspace = () => {\n        this.setState({\n            result: this.state.result.slice(0, -1)\n        })\n    };\n\n    render() {\n        return (\n            <div>\n                <div className=\"calculator-body\">\n                    <h1>Calculadora</h1>\n                    <ResultComponent result={this.state.result}/>\n                    <KeyPadComponent onClick={this.onClick}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;","import React, { Component } from 'react';\n\nclass ResultComponent extends Component {\n  render() {\n    let { result } = this.props;\n    return (\n      <div className=\"result\">\n        <p>{result}</p>\n      </div>\n    );\n  }\n}\n\nexport default ResultComponent;","import React, { Component } from 'react';\n\nclass KeyPadComponent extends Component {\n\n  render() {\n    return (\n      <div className=\"button\">\n        <button name=\"(\" onClick={e => this.props.onClick(e.target.name)}>(</button>\n        <button name=\"CE\" onClick={e => this.props.onClick(e.target.name)}>CE</button>\n        <button name=\")\" onClick={e => this.props.onClick(e.target.name)}>)</button>\n        <button name=\"C\" onClick={e => this.props.onClick(e.target.name)}>C</button><br />\n\n        <button name=\"1\" onClick={e => this.props.onClick(e.target.name)}>1</button>\n        <button name=\"2\" onClick={e => this.props.onClick(e.target.name)}>2</button>\n        <button name=\"3\" onClick={e => this.props.onClick(e.target.name)}>3</button>\n        <button name=\"+\" onClick={e => this.props.onClick(e.target.name)}>+</button><br />\n\n        <button name=\"4\" onClick={e => this.props.onClick(e.target.name)}>4</button>\n        <button name=\"5\" onClick={e => this.props.onClick(e.target.name)}>5</button>\n        <button name=\"6\" onClick={e => this.props.onClick(e.target.name)}>6</button>\n        <button name=\"-\" onClick={e => this.props.onClick(e.target.name)}>-</button><br />\n\n        <button name=\"7\" onClick={e => this.props.onClick(e.target.name)}>7</button>\n        <button name=\"8\" onClick={e => this.props.onClick(e.target.name)}>8</button>\n        <button name=\"9\" onClick={e => this.props.onClick(e.target.name)}>9</button>\n        <button name=\"*\" onClick={e => this.props.onClick(e.target.name)}>x</button><br />\n\n        <button name=\".\" onClick={e => this.props.onClick(e.target.name)}>.</button>\n        <button name=\"0\" onClick={e => this.props.onClick(e.target.name)}>0</button>\n        <button name=\"=\" onClick={e => this.props.onClick(e.target.name)}>=</button>\n        <button name=\"/\" onClick={e => this.props.onClick(e.target.name)}>รท</button><br />\n      </div>\n    );\n  }\n}\n\nexport default KeyPadComponent;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}